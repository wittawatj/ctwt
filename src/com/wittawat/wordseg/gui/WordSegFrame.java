/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * WordSegFrame.java
 *
 * Created on Feb 11, 2010, 9:54:37 AM
 */
package com.wittawat.wordseg.gui;

import com.wittawat.wordseg.Data;
import com.wittawat.wordseg.NukeTokenizer;
import com.wittawat.wordseg.NukeTokenizer3;
import com.wittawat.wordseg.WordTokenizer;
import java.awt.Font;
import java.io.IOException;
import weka.classifiers.Classifier;

/**
 *
 * @author Wittawat Jitkrittum
 */
public class WordSegFrame extends javax.swing.JInternalFrame {

    private Classifier model;
    private boolean isUseDict = true;
    private NukeTokenizer3 lastTokenizer;

    /** Creates new form WordSegFrame */
    public WordSegFrame() {
        try {
            this.model = Data.getDefaultModel();
            // Dummy statement to eliminate all lazy loading
            System.out.println("\n" + new NukeTokenizer3("โปรแกรมตัดคำไทยด้วยเทคนิคการจำแนกประเภท", model, isUseDict).tokenize() + "\n");

        } catch (Exception ex) {
            ex.printStackTrace();
        }

        initComponents();
        inputArea.setFont(new Font("SansSerif", Font.PLAIN, 24));
        inputArea.setWrapStyleWord(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jLabel1 = new javax.swing.JLabel();
        useDictToggle = new javax.swing.JToggleButton();
        splitPane = new javax.swing.JSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        inputArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        outputArea = new javax.swing.JEditorPane();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Word Segmentation Test Frame");

        jToolBar1.setRollover(true);
        jToolBar1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jToolBar1KeyReleased(evt);
            }
        });

        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("ใส่คำที่ต้องการตัด");
        jToolBar1.add(jLabel1);

        useDictToggle.setSelected(true);
        useDictToggle.setText("ใช้พจนานุกรม");
        useDictToggle.setFocusable(false);
        useDictToggle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        useDictToggle.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        useDictToggle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                useDictToggleActionPerformed(evt);
            }
        });
        jToolBar1.add(useDictToggle);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.PAGE_START);

        splitPane.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        inputArea.setColumns(20);
        inputArea.setRows(5);
        inputArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inputAreaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {

            }
        });
        jScrollPane1.setViewportView(inputArea);

        splitPane.setTopComponent(jScrollPane1);

        outputArea.setContentType("text/html");
        jScrollPane2.setViewportView(outputArea);

        splitPane.setRightComponent(jScrollPane2);

        getContentPane().add(splitPane, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jToolBar1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jToolBar1KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jToolBar1KeyReleased

    private void inputAreaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputAreaKeyReleased
        String input = inputArea.getText();
        if (input != null && !input.equals("")) {
            try {
                NukeTokenizer3 tok = new NukeTokenizer3(input, model, isUseDict);
                useTokenizer(tok);
            } catch (IOException ex) {
                ex.printStackTrace();
            }


        }
    }//GEN-LAST:event_inputAreaKeyReleased
    private void useTokenizer(NukeTokenizer3 tok) {
        this.lastTokenizer = tok;
        String tokenized = tok.tokenize();
        tokenized = tokenized.replace("|", "<font color=red>|</font>");
        tokenized = tokenized.replace("\r\n", "\n");
        tokenized = tokenized.replace("\n", "<br>");
        outputArea.setText("<html><font size=14>" + tokenized + "</font></html>");
    }
    private void useDictToggleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_useDictToggleActionPerformed
        this.isUseDict = useDictToggle.isSelected();
        this.lastTokenizer.setUseDictMatchOnFirstStep(isUseDict);
        useTokenizer(lastTokenizer);

    }//GEN-LAST:event_useDictToggleActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea inputArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JEditorPane outputArea;
    private javax.swing.JSplitPane splitPane;
    private javax.swing.JToggleButton useDictToggle;
    // End of variables declaration//GEN-END:variables
}
